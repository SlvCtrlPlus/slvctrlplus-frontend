name: Create Release

#on:
#  push:
#    branches:
#      - main
on: [push]

jobs:
  create-release:
    runs-on: ubuntu-latest
#    if: contains( github.event.head_commit.message, 'release' )
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Install modules
        run: yarn install
      - name: Build app
        run: |
          yarn run build
      - name: Compress build
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          cwd: ./
          files: |
            ./dist
          outPath: dist.tar.gz
      - name: Create Release Notes File
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          echo "$COMMIT_MESSAGE" > ./release_notes.txt
      - name: Set Tag Output
        id: set-tag
        run: echo "tag_name=$(sh date '+%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
      - name: Create Tag
        uses: actions/github-script@v6
        env:
          TAG: ${{ steps.set-tag.outputs.tag_name }}
        with:
          github-token: ${{ github.token }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
             ref: "refs/tags/${{ steps.set-tag.outputs.tag_name }}",
              sha: context.sha
            })
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.set-tag.outputs.tag_name }}
          bodyFile: './release_notes.txt'
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "${{ steps.set-tag.outputs.tag_name }}-dist.tar.gz"
